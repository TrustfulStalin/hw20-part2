{"ast":null,"code":"var _jsxFileName = \"/root/GA/hw20_react_express_portfolio/frontend/src/pages/About.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About(props) {\n  _s();\n  // create state to hold about data\n  const [about, setAbout] = useState(null);\n\n  // create function to make api call\n  const getAboutData = async () => {\n    // make api call and get response\n    const response = await fetch(props.URL + \"about\");\n    // turn response into javascript object\n    const data = await response.json();\n    // set the about state to the data\n    setAbout(data);\n  };\n\n  // make an initial call for the data inside a useEffect, so it only happens once on component load\n  useEffect(() => {\n    getAboutData();\n  }, []);\n\n  // define a function that will return the JSX needed once we get the data\n  const loaded = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: about.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: about.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: about.bio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n  /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"hey\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 1\n  }, this);\n  // if data arrives return the result of loaded, if not, an h1 that says loading\n  return about ? loaded() : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 29\n  }, this);\n}\n_s(About, \"ZQewCrXo0ZaqbbuJPEFRGd1ogYs=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","About","props","_s","about","setAbout","getAboutData","response","fetch","URL","data","json","loaded","children","name","fileName","_jsxFileName","lineNumber","columnNumber","email","bio","_c","$RefreshReg$"],"sources":["/root/GA/hw20_react_express_portfolio/frontend/src/pages/About.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction About(props) {\r\n  // create state to hold about data\r\n  const [about, setAbout] = useState(null);\r\n\r\n  // create function to make api call\r\n  const getAboutData = async () => {\r\n    // make api call and get response\r\n    const response = await fetch(props.URL + \"about\");\r\n    // turn response into javascript object\r\n    const data = await response.json();\r\n    // set the about state to the data\r\n    setAbout(data);\r\n  };\r\n\r\n  // make an initial call for the data inside a useEffect, so it only happens once on component load\r\n  useEffect(() => {getAboutData()}, []);\r\n\r\n  // define a function that will return the JSX needed once we get the data\r\n  const loaded = () => (\r\n    <div>\r\n      <h2>{about.name}</h2>\r\n      <h3>{about.email}</h3>\r\n      <p>{about.bio}</p>\r\n    </div>\r\n  );\r\n<h1>hey</h1>\r\n  // if data arrives return the result of loaded, if not, an h1 that says loading\r\n  return about ? loaded() : <h1>Loading...</h1>;\r\n}\r\n\r\nexport default About;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,KAAK,CAACO,GAAG,GAAG,OAAO,CAAC;IACjD;IACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC;IACAN,QAAQ,CAACK,IAAI,CAAC;EAChB,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IAACQ,YAAY,CAAC,CAAC;EAAA,CAAC,EAAE,EAAE,CAAC;;EAErC;EACA,MAAMM,MAAM,GAAGA,CAAA,kBACbZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAKT,KAAK,CAACU;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBlB,OAAA;MAAAa,QAAA,EAAKT,KAAK,CAACe;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBlB,OAAA;MAAAa,QAAA,EAAIT,KAAK,CAACgB;IAAG;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CACN;EACH,aAAAlB,OAAA;IAAAa,QAAA,EAAI;EAAG;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EACV;EACA,OAAOd,KAAK,GAAGQ,MAAM,CAAC,CAAC,gBAAGZ,OAAA;IAAAa,QAAA,EAAI;EAAU;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC/C;AAACf,EAAA,CA5BQF,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AA8Bd,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}