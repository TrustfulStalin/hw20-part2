{"ast":null,"code":"var _jsxFileName = \"/root/GA/hw20_react_express_portfolio/frontend/src/pages/About.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About(props) {\n  _s();\n  // create state to hold about data\n  const [about, setAbout] = useState(null);\n\n  // create function to make api call\n  const getAboutData = async () => {\n    // make api call and get response\n    const response = await fetch(props.URL + \"about\");\n    // turn response into javascript object\n    const data = await response.json();\n    // set the about state to the data\n    setAbout(data);\n  };\n\n  // make an initial call for the data inside a useEffect, so it only happens once on component load\n  useEffect(() => {\n    getAboutData();\n  }, []);\n\n  // define a function that will return the JSX needed once we get the data\n  //const loaded = () => (\n  //<div>\n  //   \n  //<h2>{about.name}</h2>\n  //<h3>{about.email}</h3>\n  //<p>{about.bio}</p>\n  //</div>\n  //);\n\n  const loaded = () => {\n    return about.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: about.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: about.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: project.git,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: project.live,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"live site\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this));\n  };\n\n  // if data arrives return the result of loaded, if not, an h1 that says loading\n  return about ? loaded() : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 29\n  }, this);\n}\n_s(About, \"ZQewCrXo0ZaqbbuJPEFRGd1ogYs=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","About","props","_s","about","setAbout","getAboutData","response","fetch","URL","data","json","loaded","map","project","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","image","href","git","live","_c","$RefreshReg$"],"sources":["/root/GA/hw20_react_express_portfolio/frontend/src/pages/About.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction About(props) {\r\n  // create state to hold about data\r\n  const [about, setAbout] = useState(null);\r\n\r\n  // create function to make api call\r\n  const getAboutData = async () => {\r\n    // make api call and get response\r\n    const response = await fetch(props.URL + \"about\");\r\n    // turn response into javascript object\r\n    const data = await response.json();\r\n    // set the about state to the data\r\n    setAbout(data);\r\n  };\r\n\r\n  // make an initial call for the data inside a useEffect, so it only happens once on component load\r\n  useEffect(() => {getAboutData()}, []);\r\n\r\n  // define a function that will return the JSX needed once we get the data\r\n  //const loaded = () => (\r\n    //<div>\r\n     //   \r\n      //<h2>{about.name}</h2>\r\n      //<h3>{about.email}</h3>\r\n      //<p>{about.bio}</p>\r\n    //</div>\r\n  //);\r\n\r\n  const loaded = () => {\r\n    return about.map((project) => (\r\n      <div>\r\n        <h1>{about.name}</h1>\r\n        <img src={about.image} />\r\n        <a href={project.git}>\r\n          <button>Github</button>\r\n        </a>\r\n        <a href={project.live}>\r\n          <button>live site</button>\r\n        </a>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n\r\n\r\n\r\n  // if data arrives return the result of loaded, if not, an h1 that says loading\r\n  return about ? loaded() : <h1>Loading...</h1>;\r\n}\r\n\r\nexport default About;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,KAAK,CAACO,GAAG,GAAG,OAAO,CAAC;IACjD;IACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC;IACAN,QAAQ,CAACK,IAAI,CAAC;EAChB,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IAACQ,YAAY,CAAC,CAAC;EAAA,CAAC,EAAE,EAAE,CAAC;;EAErC;EACA;EACE;EACC;EACC;EACA;EACA;EACF;EACF;;EAEA,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnB,OAAOR,KAAK,CAACS,GAAG,CAAEC,OAAO,iBACvBd,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAKX,KAAK,CAACY;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBpB,OAAA;QAAKqB,GAAG,EAAEjB,KAAK,CAACkB;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzBpB,OAAA;QAAGuB,IAAI,EAAET,OAAO,CAACU,GAAI;QAAAT,QAAA,eACnBf,OAAA;UAAAe,QAAA,EAAQ;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACJpB,OAAA;QAAGuB,IAAI,EAAET,OAAO,CAACW,IAAK;QAAAV,QAAA,eACpBf,OAAA;UAAAe,QAAA,EAAQ;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,CAAC;EACJ,CAAC;;EAKD;EACA,OAAOhB,KAAK,GAAGQ,MAAM,CAAC,CAAC,gBAAGZ,OAAA;IAAAe,QAAA,EAAI;EAAU;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC/C;AAACjB,EAAA,CA/CQF,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAiDd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}